{"version":3,"sources":["src/PlayScreen.js","App.js","web-build/register-service-worker.js","src/signs/rock.png","src/signs/scissors.png","src/signs/paper.png"],"names":["rock","require","scissors","paper","bgColors","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent","header","fontSize","color","image","height","width","button","position","bottom","PlayScreen","useState","counter","setCounter","useEffect","timer","setTimeout","clearTimeout","View","style","compose","Text","Image","source","Math","floor","random","Button","onPress","title","App","play","setplay","titleHeader","imageHeader","marginBottom","marginTop","navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch","error","console","module","exports"],"mappings":"kMAGMA,EAAKC,EAAQ,IACbC,EAASD,EAAQ,IACjBE,EAAMF,EAAQ,IAQdG,EAAS,CAAC,UAAU,UAAU,WAmC9BC,EAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTC,KAAM,EACNC,gBAAgB,OAChBC,WAAY,SACZC,eAAgB,UAElBC,OAAO,CACLC,SAAS,IACTC,MAAM,QAGRC,MAAM,CACJC,OAAO,IACPC,MAAM,KAGRC,OAAO,CACLC,SAAS,WACTC,OAAO,MAKIC,EAzDE,WAAK,IAAD,EAEWC,mBAAS,GAFpB,WAEZC,EAFY,KAEHC,EAFG,KAejB,OAXFC,qBAAU,WACR,GAAY,GAATF,EAAH,CACA,IAAMG,EAAOC,YAAY,WACvBH,EAAWD,EAAQ,KACnB,KACF,OAAO,WACLK,aAAaF,OAEd,CAACH,IAIF,kBAACM,EAAA,EAAD,CAAMC,MAAOzB,IAAW0B,QAAQ3B,EAAOG,UAAU,CAACE,gBAAgBN,EAASoB,EAAQ,MAChFA,EAAU,EACT,kBAACS,EAAA,EAAD,CAAMF,MAAO1B,EAAOQ,QAASW,GAE/B,oCACE,kBAACU,EAAA,EAAD,CAAOH,MAAO1B,EAAOW,MAAOmB,OA5BtB,CAACnC,EAAKE,EAASC,GAChBiC,KAAKC,MAAoB,EAAdD,KAAKE,aA4BrB,kBAACR,EAAA,EAAD,CAAMC,MAAO1B,EAAOc,QACpB,kBAACoB,EAAA,EAAD,CAAQC,QAAS,kBAAKf,EAAW,IAAIgB,MAAM,mBCnCpC,SAASC,IAAO,IAAD,EAEJnB,oBAAS,GAFL,WAErBoB,EAFqB,KAEfC,EAFe,KAI5B,OACED,EAAO,kBAAC,EAAD,MACP,kBAACb,EAAA,EAAD,CAAMC,MAAO1B,EAAOG,WAClB,kBAACyB,EAAA,EAAD,CAAMF,MAAO1B,EAAOwC,aAApB,uBACA,kBAACZ,EAAA,EAAD,CAAMF,MAAO1B,EAAOyC,aAApB,8BACA,kBAAChB,EAAA,EAAD,CAAMC,MAAO1B,EAAOc,QACpB,kBAACoB,EAAA,EAAD,CAASC,QAAS,WAAMI,GAAQ,IAAQH,MAAM,WAOpD,IAAMpC,EAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTC,KAAM,EACNC,gBAAiB,OACjBC,WAAY,SACZC,eAAgB,UAElBiC,YAAY,CACV/B,SAAS,GACTiC,aAAa,IAEfD,YAAY,CACVhC,SAAS,IAEXK,OAAO,CACLD,MAAM,IACN8B,UAAU,O,2DClCV,kBAAmBC,WACrBC,OAAOC,iBAAiB,QAAQ,WAC9BF,UAAUG,cACPC,SAAS,0BAA2B,CAAEC,MAAO,MAC7CC,MAAK,SAAUC,OAGfC,OAAM,SAAUC,GACfC,QAAQH,KAAK,oCAAqCE,U,mBCV1DE,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,sC,mBCA3CD,EAAOC,QAAU,IAA0B,oC","file":"static/js/app.5bac1511.chunk.js","sourcesContent":["import React, { useState,useEffect } from 'react';\r\nimport { StyleSheet, Text, View, Button, Image } from 'react-native';\r\n\r\nconst rock=require(\"./signs/rock.png\")\r\nconst scissors=require(\"./signs/scissors.png\")\r\nconst paper=require(\"./signs/paper.png\")\r\n\r\nconst randomRPS= () =>{\r\n  const signs=[rock,scissors,paper]\r\n  const rand=Math.floor(Math.random()*3)\r\n  return signs[rand]\r\n}\r\n\r\nconst bgColors=['#fab1a0','#81ecec','#ffeaa7']\r\n\r\nconst PlayScreen=()=>{\r\n\r\n  const [counter, setCounter] = useState(3)\r\n\r\n  useEffect(() => {\r\n    if(counter==0) return\r\n    const timer= setTimeout( ()=>{\r\n      setCounter(counter-1)\r\n    },500);\r\n    return () => {\r\n      clearTimeout(timer)\r\n    }\r\n  }, [counter])\r\n\r\n\r\n    return(\r\n    <View style={StyleSheet.compose(styles.container,{backgroundColor:bgColors[counter-1]})} >\r\n      {counter > 0 ? (\r\n        <Text style={styles.header}>{counter}</Text>\r\n      ) : (\r\n      <>\r\n        <Image style={styles.image} source={randomRPS()} />\r\n        <View style={styles.button}>\r\n        <Button onPress={()=> setCounter(3)} title=\"Play Again\" /> \r\n        </View>      \r\n        </>\r\n           )\r\n      } \r\n    </View>\r\n    );\r\n  }\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor:'#fff' ,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  header:{\r\n    fontSize:150,\r\n    color:'#fff',\r\n    \r\n  },\r\n  image:{\r\n    height:250,\r\n    width:300,\r\n  \r\n  },\r\n  button:{\r\n    position:\"absolute\",\r\n    bottom:25,\r\n\r\n  }\r\n});\r\n\r\nexport default PlayScreen","import React, { useState } from 'react';\nimport { StyleSheet, Text, View, Button } from 'react-native';\nimport PlayScreen from './src/PlayScreen';\nexport default function App() {\n\n  const [play, setplay] = useState(false)\n\n  return (\n    play? (<PlayScreen />):(\n    <View style={styles.container}>\n      <Text style={styles.titleHeader}>Rock Paper Scissors</Text>\n      <Text style={styles.imageHeader}>✊ ✋ ✌️</Text>\n      <View style={styles.button}>\n      <Button  onPress={()=>{ setplay(true)}} title=\"Play\"/>\n      </View>\n    </View>\n    ) \n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  titleHeader:{\n    fontSize:30,\n    marginBottom:30,\n  },\n  imageHeader:{\n    fontSize:70,\n  },\n  button:{\n    width:240,\n    marginTop:40,\n  }\n});\n\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","module.exports = __webpack_public_path__ + \"static/media/rock.864b5a2a.png\";","module.exports = __webpack_public_path__ + \"static/media/scissors.48d238a6.png\";","module.exports = __webpack_public_path__ + \"static/media/paper.cffb3100.png\";"],"sourceRoot":""}